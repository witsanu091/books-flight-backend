# version: '3.8'
# services:
#   booking-flight:
#     # container_name: booking-flight
#     build: .
#     image: booking-flight:latest
#     restart: unless-stopped
#     env_file: .env
#     ports:
#       - "8080:8080"
#     environment:
#       DATABASE_CLIENT: ${DATABASE_CLIENT}
#       DATABASE_HOST: booking-flightDB
#       DATABASE_NAME: ${DATABASE_NAME}
#       DATABASE_PORT: ${DATABASE_PORT}
#       DATABASE_USERNAME: ${DATABASE_USERNAME}
#       DATABASE_PASSWORD: ${DATABASE_PASSWORD}
#       DATABASE_POOL_MAX: ${DATABASE_POOL_MAX}
#       DATABASE_SSL: false
#       JWT_SECRET: ${JWT_SECRET}
#       APP_KEYS: ${APP_KEYS}
#       API_TOKEN_SALT: ${API_TOKEN_SALT}
#       ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
#       TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
#       NODE_ENV: ${NODE_ENV}
#     networks:
#       - booking-flight
#     depends_on:
#       - booking-flightDB

#   booking-flightDB:
#     # container_name: booking-flightDB
#     restart: unless-stopped
#     env_file: .env
#     image: postgres:15.3-alpine
#     environment:
#       POSTGRES_USER: ${DATABASE_USERNAME}
#       POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
#       POSTGRES_DB: ${DATABASE_NAME}
#     ports:
#       - '5432:5432'
#     networks:
#       - booking-flight

version: '3.8'
services:
  app:
    build: .
    ports:
      - ${PORT}:8081
    depends_on:
      - db
    environment:
      POSTGRES_URL: ${POSTGRES_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASS}
      POSTGRES_ENGINE: ${POSTGRES_ENGINE}
      POSTGRES_DB: ${POSTGRES_DB}
      KEY_SECRET: ${KEY_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      DEV: ${DEV}
      IS_ENCRYPT: ${IS_ENCRYPT}
      ENCRYPT_KEY: ${ENCRYPT_KEY}

  db:
    image: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - mydbdata:/var/lib/postgresql/data
volumes:
  mydbdata:

